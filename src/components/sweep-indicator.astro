---
import type { ControlElement } from "@types"
import { cva } from "class-variance-authority"
import { c } from "dist/_astro/solid.BMHjOSeE"

interface Props {
  size: number
  color: ControlElement["highlightColor"]
}

const sweepClass = cva("sweep-indicator", {
  variants: {
    color: {
      primary: "border-loopydemos-highlight-primary-themed",
      secondary: "border-loopydemos-highlight-secondary-themed",
      tertiary: "border-loopydemos-highlight-tertiary-themed",
    },
  },
  defaultVariants: {
    color: "secondary",
  },
})

const { size, color } = Astro.props
const pixelSize = `${size}px`
---

<div class={sweepClass({ color })}></div>

<style define:vars={{ size: pixelSize, scaleX: 1, scaleY: 1 }}>
  .sweep-indicator {
    @apply absolute left-0 top-0 box-border rounded-full border-dashed content-none;
    border-width: calc(var(--size) / 12);
    width: var(--size);
    height: var(--size);
    z-index: -1;
    transform: scale(calc(1.2 * var(--scaleX)), calc(1.2 * var(--scaleY)));
    animation: 30s linear infinite spinKeepScale;
  }

  @keyframes spinKeepScale {
    0% {
      transform: scale(calc(1.2 * var(--scaleX)), calc(1.2 * var(--scaleY)));
    }
    100% {
      transform: scale(calc(1.2 * var(--scaleX)), calc(1.2 * var(--scaleY)))
        rotate(360deg);
    }
  }
</style>
