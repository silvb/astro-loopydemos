---
import { type CollectionEntry, getEntry } from "astro:content"

import { getPedalsFromPresets } from "@utils/get-pedals-from-presets"
import { getStaticPedalData } from "@utils/get-static-pedal-data"
import { DemoWidgetContainer } from "./demo-widget-container"
import LoadingSkeleton from "./loading-skeleton.astro"

interface Props {
  presetSlug: string
}

const { presetSlug } = Astro.props

const presetsEntry: CollectionEntry<"presets"> | undefined = await getEntry(
  "presets",
  `${presetSlug as CollectionEntry<"demos">["slug"]}.presets`,
)

if (!presetsEntry) {
  throw new Error(`Presets not found for slug: ${presetSlug}`)
}

const {
  data: { presets, hasBackingTrack, volume, mainPedal },
} = presetsEntry

let pedals = [...new Set(getPedalsFromPresets(presets))]

if (pedals.includes(presetSlug)) {
  pedals.sort(pedal => (pedal === presetSlug ? -1 : 1))
}

if (pedals.length === 0) pedals = [mainPedal || presetSlug]

const isComparison = presets.some(({ comparison }) => Boolean(comparison))

const staticPedalData = await getStaticPedalData(pedals)

const maxHeight = Math.max(...staticPedalData.map(({ height }) => height))

// Calculate the largest height from the first preset
const firstPreset = presets[0]
let firstPresetPedalSlugs: string[]

if (firstPreset?.comparison) {
  firstPresetPedalSlugs = [
    firstPreset.comparison[0]?.pedalSlug || mainPedal || presetSlug,
  ]
} else if (firstPreset?.chain) {
  firstPresetPedalSlugs = firstPreset.chain.map(item => item.pedalSlug)
} else {
  firstPresetPedalSlugs = [mainPedal || presetSlug]
}

const firstPresetPedalData = staticPedalData.filter(pedal =>
  firstPresetPedalSlugs.includes(pedal.slug),
)

const firstPresetHeight =
  firstPresetPedalData.length > 0
    ? Math.max(...firstPresetPedalData.map(pedal => pedal.height))
    : maxHeight

const firstPresetWidth = firstPresetPedalData.reduce(
  (acc, pedal) => acc + pedal.width,
  0,
)
---

<LoadingSkeleton
  pedalWidth={firstPresetWidth}
  pedalHeight={firstPresetHeight}
  hasMultiplePresets={presets.length > 1}
  {presetSlug}
  {hasBackingTrack}
  {isComparison}
/>
<DemoWidgetContainer
  client:only="solid-js"
  {presets}
  {staticPedalData}
  {isComparison}
  {presetSlug}
  {volume}
  {hasBackingTrack}
  {maxHeight}
/>
