---
import { getEntry, type CollectionEntry } from "astro:content"

import AudioPlayer from "./audio-player"
import Pedal from "./pedal"
import PresetsSlider from "./presets-slider.astro"

import { DemoStateInitializer } from "./demo-state-initializer"
import ComparisonSlider from "./comparison-slider.astro"
import { getPedalsFromPresets } from "@utils/get-pedals-from-presets"
import { ScaleFactor } from "./scale-factor"

interface Props {
  presetSlug: string
}

const { presetSlug } = Astro.props

const {
  data: { presets, hasBackingTrack, volume, mainPedal },
}: CollectionEntry<"presets"> = await getEntry(
  "presets",
  `${presetSlug as CollectionEntry<"demos">["slug"]}.presets`
)

let pedals = [...new Set(getPedalsFromPresets(presets))]

if (pedals.includes(presetSlug)) {
  pedals.sort((pedal) => (pedal === presetSlug ? -1 : 1))
}

if (pedals.length === 0) pedals = [mainPedal || presetSlug]

const isComparison = presets.some(({ comparison }) => Boolean(comparison))
---

<DemoStateInitializer client:load {presets} {pedals} />
<div class="flex flex-col gap-4">
  <AudioPlayer slug={presetSlug} {hasBackingTrack} {volume} />
  <PresetsSlider {presets} />
  {isComparison && <ComparisonSlider {pedals} />}
</div>
<ScaleFactor client:only="solid-js">
  <div class="mt-8 flex h-full items-start justify-center">
    {pedals.map((slug) => <Pedal slug={slug} />)}
  </div>
</ScaleFactor>
