---
import { getEntry, type CollectionEntry } from "astro:content"

import { getPedalsFromPresets } from "@utils/get-pedals-from-presets"
import { DemoWidgetContainer } from "./demo-widget-container"
import LoadingSkeleton from "./loading-skeleton.astro"
import { getStaticPedalData } from "@utils/get-static-pedal-data"

interface Props {
  presetSlug: string
}

const { presetSlug } = Astro.props

const {
  data: { presets, hasBackingTrack, volume, mainPedal },
}: CollectionEntry<"presets"> = await getEntry(
  "presets",
  `${presetSlug as CollectionEntry<"demos">["slug"]}.presets`
)

let pedals = [...new Set(getPedalsFromPresets(presets))]

if (pedals.includes(presetSlug)) {
  pedals.sort(pedal => (pedal === presetSlug ? -1 : 1))
}

if (pedals.length === 0) pedals = [mainPedal || presetSlug]

const isComparison = presets.some(({ comparison }) => Boolean(comparison))

const staticPedalData = await getStaticPedalData(pedals)

const maxHeight = Math.max(...staticPedalData.map(({ height }) => height))
---

<LoadingSkeleton
  pedalHeight={maxHeight}
  hasMultiplePresets={presets.length > 1}
  {presetSlug}
  {hasBackingTrack}
  {isComparison}
/>
<DemoWidgetContainer
  client:only="solid-js"
  {presets}
  {staticPedalData}
  {isComparison}
  {presetSlug}
  {volume}
  {hasBackingTrack}
  {maxHeight}
/>
