---
import { Icon } from "astro-icon/components"
import { getEntry, type CollectionEntry } from "astro:content"

interface Props {
  slug: CollectionEntry<"demos">["slug"]
}

const { slug } = Astro.props

const { data }: CollectionEntry<"presets"> = await getEntry(
  "presets",
  `${slug}.presets`
)

const { presets } = data
const presetIds = presets.map(({ id }) => id)
---

<div class="custom-scrollbar">
  <ul class="flex h-10 list-none gap-1">
    {
      presets.map(({ id, isSweep, label }) => (
        <li class="h-full flex-shrink-0 flex-grow-0 basis-auto">
          <button
            id={id}
            class={`${isSweep ? "bg-loopydemos-highlight-secondary" : "bg-loopydemos-highlight-primary"} flex h-full items-center gap-1 rounded-md px-2 font-black text-loopydemos-background opacity-40`}
          >
            <span>{label}</span>
            <Icon name="ph:faders" />
          </button>
        </li>
      ))
    }
  </ul>
</div>

<script define:vars={{ presetIds }}>
  presetIds.forEach((id) => {
    const element = document.getElementById(id)
    if (typeof window === "undefined" || !element) return

    const backgroundColor = window.getComputedStyle(element).backgroundColor
    console.log({ backgroundColor })
    // Extract RGB values from the input string
    const rgbValues = backgroundColor.match(/\d+/g)
    if (!rgbValues || rgbValues.length !== 3) {
      // Invalid input, return
      return
    }

    const [red, green, blue] = rgbValues.map(Number)

    // Calculate relative luminance
    const luminance = 0.299 * red + 0.587 * green + 0.114 * blue

    // Choose text color based on luminance
    const textColor =
      luminance > 128 ? "text-loopydemos-black" : "text-loopydemos-text"

    console.log({ textColor })
    element.classList.add(textColor)
  })
</script>

<style>
  .custom-scrollbar {
    overflow-x: auto;
    overflow-y: hidden;
    scroll-snap-type: x mandatory;
    scroll-behavior: smooth;
    scrollbar-width: none;
    scrollbar-color: transparent transparent;

    :-webkit-scrollbar {
      display: none;
    }
  }
</style>
